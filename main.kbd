(defsrc
  q    w    e    r    t          y    u    i    o    p 
  a    s    d    f    g          h    j    k    l    ;
  z    x    c    v    b          n    m    ,    .    /
                 esc  spc        ralt caps 
)

(defcfg concurrent-tap-hold yes)
(defvar
  tap-time 200
  hold-time 200

  hold-index 150
  hold-middle 150
  hold-ring 180
  hold-pinky 195
)

(include control.kbd)
(include lang-switching.kbd)
(include symbols.kbd)
(include russian-letters.kbd)
(include hrm-sublayers.kbd)

(include default-layouts.kbd) ;; qwe & jcu
(include gallium.kbd)         ;; eng
(include diktor.kbd)          ;; rus
(include gaming.kbd)          ;; gam

(defalias
  qwe (multi (layer-switch qwe) @en)
  jcu (multi (layer-switch jcu) @ru)
  eng (switch
    ((base-layer eng)) XX break
    ((base-layer qwe)) XX break
    ((base-layer rus)) (multi (layer-switch eng) @en) break
    ((base-layer jcu)) @qwe break
    () XX break
  )
  rus (switch
    ((base-layer eng)) (multi (layer-switch rus) @ru) break
    ((base-layer qwe)) @jcu break
    ((base-layer rus)) XX break
    ((base-layer jcu)) XX break
    () XX break
  )
  lan (switch
    ((and (layer nav) (base-layer eng))) (multi (layer-switch eng) @en) break
    ((and (layer nav) (base-layer rus))) (multi (layer-switch rus) @ru) break
    ((base-layer eng)) @rus break
    ((base-layer qwe)) @jcu break
    ((base-layer rus)) @eng break
    ((base-layer jcu)) @qwe break
    () XX break
  )
  gam (layer-switch gam)
  num (tap-hold $tap-time $hold-time esc (layer-toggle num))
  sym (tap-hold $tap-time $hold-time ret (layer-toggle sym))
  nav (tap-hold $tap-time $hold-time spc (layer-toggle nav))
  l_ (tap-hold $tap-time $hold-time _ (layer-toggle mos))
)

(defchordsv2
  ;; left side
  (e r) @eng $hold-time all-released    (        gam gfn sym nav mos qwe jcu)
  (w e) @rus $hold-time all-released    (        gam gfn sym nav mos qwe jcu)
  (w r) @<>  $hold-time all-released    (eng rus gam gfn     nav mos qwe jcu)
  (s f) @brc $hold-time all-released    (eng rus gam gfn     nav mos qwe jcu)
  ;; right side
  (u o) @[]  $hold-time all-released    (eng rus gam gfn     nav mos qwe jcu)
  (j l) @{}  $hold-time all-released    (eng rus gam gfn     nav mos qwe jcu)
  (m .) @-[] $hold-time all-released    (eng rus gam gfn     nav mos qwe jcu)
  (i o) @й   $hold-time all-released    (eng     gam gfn sym nav mos qwe jcu)
  (u i) @ё   $hold-time all-released    (eng     gam gfn sym nav mos qwe jcu)
  (m ,) @ш   $hold-time all-released    (eng     gam gfn sym nav mos qwe jcu)
  (, .) @щ   $hold-time all-released    (eng     gam gfn sym nav mos qwe jcu)
)

(deflayer num
  f12  f7   f8   f9   volu      @/    7    8    9   @fdel
 @f11 @f4  @f5  @f6   vold       -   @h4  @h5  @h6  @hbspc
  f10  f1   f2   f3   mute      @:    1    2    3    ralt
                @num @nav       @l0  @.
)
(defalias
  l0 (tap-hold $tap-time $hold-time 0 (layer-toggle sym))
)

(deflayer sym
 @№   @<   @=   @>   @`         @'   @[   @“   @]   @^
 @h!  @hlb @h-  @hrb @+         @$   @h{  @h;  @h}  @h?
 @%   @~   @:   @/\  @#         @*   @|   @_   @&   @\
                @lat @nav        XX  @.
)
(defalias
  lat (tap-hold $tap-time $hold-time @at (layer-toggle num))
)

(deflayer nav
 @del @tlft tab @trgt @af4      ins  @home up   @end @fdel
 @cmd lalt @oct lsft  @prnt     @mcon left down rght @bdel
 @udo @cut @cpy @pst  @rdo      mltp @pgup @mnu @pgdn ralt
                @num  XX        @sym @cw   
)

(deflayer mos
 @lrd  _    _    _    _          _    _    _    _    _ 
 @cmd lalt @ctl lsft  _          _    _    _    _    _
 @qwe @gam @qwe @lan  _          _    _    _    _    _
                 _    _          _    _    
)
